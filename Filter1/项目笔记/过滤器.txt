fillter(过滤器):过滤请求和响应 ,是一个接口
	作用:自动登录、统一编码、过滤关键字
	编写filter步骤:
		1.编写一个类
			a.实现接口
			b.重写方法
		2.编写配置 文件
			a.注册filter
			b.绑定路径
		3.测试
Filter接口的方法 :
	init(Filter Config):初始化操作
	doFilter:(ServletRequest request, ServletResponse response, FilterChain chain):处理业务逻辑
	destory:销毁操作
filter的生命周期(了解)
	filter单实例多线程
	filter在服务器启动的时候 服务器创建filter 调用init方法 实现初始化操作
	请求来的时候,创建一个线程 根据路径调用dofilter 执行业务逻辑
	当filter被移除的时候或者服务器正常关闭的时候 调用destory方法 执行销毁操作.
FilterChain:过滤链
	通过chain的dofilter方法,可以将请求放行到下一个过滤器,直到最后一个过滤器放行才可以访问到servlet|jsp
	doFilter()放行方法
	
url-pattern配置
	3种
	完全匹配	必须以"/" 开始  例如: /a/b
	目录匹配	必须以"/" 开始 以"*"结束  例如:/a/b/*
	后缀名匹配	以"*."开始 以字符结束   例如 :  *.jsp  *.do  *.action
例如:
	afilter  路径  /*
	bFilter  路径  /demo4
一个资源有可能被多个过滤器匹配成功,多个过滤器的执行顺序是按照web.xml中filter-mapping的顺序执行的

